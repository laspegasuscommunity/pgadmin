#`version: "3.5"` указывает версию формата файла Docker Compose, который будет использоваться. В данном случае это версия 3.5. Эта версия поддерживает такие возможности, как объекты `config`, `секреты` и опции `deploy` для развертывания сервисов в рое.
version: "3.5"

#Это определение сети под названием "docker_lasp" с именем сети по умолчанию. Эта сеть может использоваться для соединения различных служб, определенных в файле Docker Compose, позволяя им взаимодействовать друг с другом.
networks:
  docker_lasp:
    name: $DEFAULT_NETWORK

services:
  #`pgadmin:` определяет службу для запуска веб-инструмента администрирования pgAdmin для PostgreSQL. Он определяет образ для использования, переменные окружения для загрузки, порты для открытия, тома для монтирования, имя контейнера и сеть для подключения. Она также зависит от службы `postgres`, что означает, что служба `postgres` должна быть запущена до запуска службы `pgadmin`.
  pgadmin:
    #`env_file: - "pgadmin.env"` - это указание пути к файлу, содержащему переменные окружения, которые должны быть загружены в контейнер службы `pgadmin`. Файл `pgadmin.env`, вероятно, содержит конфиденциальную информацию, такую как пароли или ключи API, и отделение его от основного файла `docker-compose.yml` помогает сохранить конфиденциальную информацию в безопасности и отдельно от основной конфигурации.
    env_file:
      - "pgadmin.env"
    #`image: dpage/pgadmin4:6.20` указывает образ Docker, который будет использоваться для службы `pgadmin`. В данном случае используется версия 6.20 образа `dpage/pgadmin4`, который представляет собой предварительно созданный образ, содержащий веб-инструмент администрирования pgAdmin для PostgreSQL.
    image: dpage/pgadmin4:6.20
    #`порты: - "90:80"` открывает порт 80 контейнера службы `pgadmin` для порта 90 хост-машины. Это означает, что веб-инструмент администрирования pgAdmin может быть доступен из веб-браузера на хост-машине, перейдя по адресу `http://localhost:90`.
    ports:
      - "90:80"
    #`restart: always` - это опция конфигурации в Docker Compose, которая указывает, что контейнер всегда должен перезапускаться, если он останавливается по какой-либо причине, например, в результате сбоя или ручной остановки. Это гарантирует, что сервис останется доступным и работающим даже в случае непредвиденных сбоев.
    restart: always
    #`volumes: - "./pgadmin/data:/var/lib/pgadmin"` монтирует том с хост-машины в контейнер службы `pgadmin`. В частности, монтируется каталог `./pgadmin/data` на хост-машине в каталог `/var/lib/pgadmin` внутри контейнера `pgadmin`. Это позволяет сохранять данные между перезагрузками контейнера и гарантирует, что любые изменения, внесенные в данные в контейнере `pgadmin`, будут отражены и на хост-машине.
    volumes:
      - "./pgadmin/data:/var/lib/pgadmin"
    #`container_name: pgadmin` задает имя контейнера для службы `pgadmin` - "pgadmin". Это позволяет легко идентифицировать контейнер и управлять им с помощью команд и инструментов Docker.
    container_name: pgadmin
    #`depends_on: - "postgres"` указывает, что служба `pgadmin` зависит от службы `postgres`. Это означает, что служба `postgres` должна быть запущена до запуска службы `pgadmin`. Это гарантирует, что база данных доступна для веб-инструмента администрирования pgAdmin для подключения и управления.
    depends_on:
      - "postgres"
    #`networks: - "docker_lasp"` определяет сеть, к которой должны подключаться сервисы в файле Docker Compose. В данном случае указывается сеть под названием "docker_lasp". Это позволяет службам взаимодействовать друг с другом по сети, даже если они запущены в отдельных контейнерах. По умолчанию Docker Compose создает сеть для подключения сервисов, но указание пользовательской сети может обеспечить больший контроль над конфигурацией сети.
    networks:
      - "docker_lasp"